name: Deploy
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      version:
        required: true
        type: string
      aws-oidc-role:
        required: true
        type: string
      aws-region:
        required: true
        type: string
      apprunner-service-role:
        required: true
        type: string
      ecr-repo:
        required: true
        type: string
      deploy:
        required: true
        type: boolean

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ inputs.aws-oidc-role }}
          role-session-name: "oidc-access-staging"
          aws-region: ${{ inputs.aws-region }}

      - name: Check AWS Access
        run: aws sts get-caller-identity

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build
        if: ${{ inputs.deploy }} == 'false'
        uses: docker/build-push-action@v4
        with:
          context: app
          file: app/Dockerfile
          push: false
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr-repo }}:latest

      - name: Build and Push
        if: ${{ inputs.deploy }} == 'true'
        uses: docker/build-push-action@v4
        with:
          context: app
          file: app/Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr-repo }}:${{ inputs.version }}

      - name: Deploy to App Runner Image
        if: ${{ inputs.deploy }} == 'true'
        id: deploy-apprunner
        uses: awslabs/amazon-app-runner-deploy@main
        with:
          service: app-runner-git-deploy-service
          image: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr-repo }}:${{ inputs.version }}
          access-role-arn: ${{ inputs.apprunner-service-role }}
          region: ${{ inputs.aws-region }}
          cpu: 1
          memory: 2
          wait-for-service-stability-seconds: 1200

      - name: App Runner URL
        if: ${{ inputs.deploy }} == 'true'
        run: echo "App runner URL ${{ steps.deploy-apprunner.outputs.service-url }}"
